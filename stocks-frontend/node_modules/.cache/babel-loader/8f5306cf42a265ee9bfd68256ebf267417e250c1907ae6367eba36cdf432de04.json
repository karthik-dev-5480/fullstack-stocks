{"ast":null,"code":"var _jsxFileName = \"/Users/cheekati_karthik/Desktop/JAVA/Restful/stocks-fullstack/stocks-frontend/src/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation(); // ðŸ‘ˆ listen for route changes\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/auth/validate\", {\n      credentials: \"include\"\n    }).then(res => setIsAuthenticated(res.ok)).catch(() => setIsAuthenticated(false));\n  }, [location]); // ðŸ‘ˆ run on every route change\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"whLl+38E7ub8R5l5bdVAfFlsuKk=\", false, function () {\n  return [useLocation];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useLocation","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","location","fetch","credentials","then","res","ok","catch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cheekati_karthik/Desktop/JAVA/Restful/stocks-fullstack/stocks-frontend/src/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation(); // ðŸ‘ˆ listen for route changes\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/auth/validate\", {\n      credentials: \"include\",\n    })\n      .then((res) => setIsAuthenticated(res.ok))\n      .catch(() => setIsAuthenticated(false));\n  }, [location]); // ðŸ‘ˆ run on every route change\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,WAAW,EAAE;IACf,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKL,kBAAkB,CAACK,GAAG,CAACC,EAAE,CAAC,CAAC,CACzCC,KAAK,CAAC,MAAMP,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEP,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,eAAe;MAAEC;IAAmB,CAAE;IAAAH,QAAA,EAClEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CAjBWF,YAAY;EAAA,QAENJ,WAAW;AAAA;AAAAsB,EAAA,GAFjBlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}