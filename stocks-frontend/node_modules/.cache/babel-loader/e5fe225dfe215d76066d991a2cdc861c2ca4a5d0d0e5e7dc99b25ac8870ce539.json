{"ast":null,"code":"var _jsxFileName = \"/Users/cheekati_karthik/Desktop/JAVA/Restful/stocks-fullstack/stocks-frontend/src/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Optional: Check session from backend on mount\n  useEffect(() => {\n    fetch(\"https://fullstack-stocks.onrender.com/auth/check\", {\n      credentials: \"include\"\n    }).then(res => res.ok && setIsAuthenticated(true)).catch(() => setIsAuthenticated(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","fetch","credentials","then","res","ok","catch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cheekati_karthik/Desktop/JAVA/Restful/stocks-fullstack/stocks-frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Optional: Check session from backend on mount\n  useEffect(() => {\n    fetch(\"https://fullstack-stocks.onrender.com/auth/check\", {\n      credentials: \"include\"\n    })\n      .then(res => res.ok && setIsAuthenticated(true))\n      .catch(() => setIsAuthenticated(false));\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,kDAAkD,EAAE;MACxDC,WAAW,EAAE;IACf,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,IAAIL,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAC/CM,KAAK,CAAC,MAAMN,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,eAAe;MAAEC;IAAmB,CAAE;IAAAH,QAAA,EAClEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CAjBWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}